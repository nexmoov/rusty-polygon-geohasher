# This file is autogenerated by maturin v1.7.0
# To update, run
#
#    maturin generate-ci github
#
name: CI

on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  run_pre_commit:
    name: Run pre-commit hooks
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Poetry
        run: pipx install poetry
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
          cache: "poetry"
      - uses: pre-commit/action@v3.0.1
  tests:
    runs-on: ubuntu-latest
    needs: [run_pre_commit]
    steps:
      - uses: actions/checkout@v4
      - name: Install Poetry
        run: pipx install poetry
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
          cache: "poetry"
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          args: --release --out dist
          sccache: 'true'
      - name: pytest
        run: |
          pipx ensurepath
          poetry self add poetry-plugin-export
          poetry export -f requirements.txt --with dev --output requirements.txt
          set -e
          python3 -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt
          pip install rusty_polygon_geohasher --find-links dist --force-reinstall
          pip install pytest
          pytest

  linux:
    needs: [tests]
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
          - runner: ubuntu-latest
            target: x86
          - runner: ubuntu-latest
            target: aarch64
          - runner: ubuntu-latest
            target: armv7
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist

  musllinux:
    needs: [tests]
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
          - runner: ubuntu-latest
            target: x86
          - runner: ubuntu-latest
            target: aarch64
          - runner: ubuntu-latest
            target: armv7
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: 'true'
          manylinux: musllinux_1_2
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-musllinux-${{ matrix.platform.target }}
          path: dist
  windows:
    needs: [tests]
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
          - runner: windows-latest
            target: x86
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
          architecture: ${{ matrix.platform.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: dist

  macos:
    needs: [tests]
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-14
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist

  sdist:
    needs: [tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [linux, musllinux, macos, windows, sdist]
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: wheels-macos-x86_64
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: wheels-macos-aarch64
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: wheels-linux-x86_64
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: wheels-linux-x86
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: wheels-linux-aarch64
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: wheels-linux-armv7
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: wheels-musllinux-x86_64
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: wheels-musllinux-x86
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: wheels-musllinux-aarch64
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: wheels-musllinux-armv7
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: wheels-windows-x86
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: wheels-windows-x64
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: wheels-sdist
          path: dist
      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
